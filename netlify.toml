[Settings]
# Added automatically by the Netlify CLI. It has no effect during normal
# Git-backed deploys.
ID = "Gatsby Netlify"

# Settings in the [build] context are global and are applied to all contexts
# unless otherwise overridden by more specific contexts.
[build]
  # Directory to change to before starting a build.
  # This is where we will look for package.json/.nvmrc/etc.
  base = "./"

  # Directory (relative to root of your repo) that contains the deploy-ready
  # HTML files and assets generated by the build. If a base directory has
  # been specified, include it in the publish directory path.
  publish = "public"

  # Default build command.
  command = "gatsby build"

  # Directory with the lambda functions to deploy to AWS.
  # We dont' use functions
  #functions = "./functions/"

# Production context: all deploys from the Production branch set in your site's
# deploy contexts will inherit these settings.
[context.master]
  publish = "public"
  command = '''
      echo 'this is the PRODUCTION build';
      npm run build
      '''
[context.master.environment]
  NODE_VERSION = "10.0.0"
  ACTIVE_ENV = "production"


# All PR will be built with this context except for `staging` and `develop`
[context.deploy-preview.environment]
  command = '''
      echo 'this is the DEPLOY PREVIEW build';
      npm run build
      '''
[context.deploy-preview.environment]
  NODE_VERSION = "10.0.0"
  ACTIVE_ENV = "staging"


# Staging build
[context.staging]
  publish = "public"
  command = '''
      echo 'this is the STAGING build';
      npm run build
      '''

[context.staging.environment]
  NODE_VERSION = "10.0.0"
  ACTIVE_ENV = "production"

# Develop build
[context.develop]
  publish = "public"
  command = '''
      echo 'this is the DEVELOP build';
      npm run build
      '''

[context.develop.environment]
  NODE_VERSION = "10.0.0"
  ACTIVE_ENV = "staging"

# Redirects and headers are GLOBAL for all builds â€“ they do not get scoped to
# contexts no matter where you define them in the file.
# For context-specific rules, use _headers or _redirects files, which are
# PER-DEPLOY.

# A basic redirect rule
[[redirects]]
  from = "/*"
  to = "/blog/:splat"

# A redirect rule with all the supported properties
[[redirects]]
  from = "/old-path"
  to = "/new-path"

  # The default HTTP status code is 301, but you can define a different one.
  status = 302

  # By default, redirects won't be applied if there's a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
  force = true

  # Redirect from /old-path?id=123 to /new-path. Each combination of query
  # params needs to be defined in a separate [[redirects]] block.
  # More information at https://www.netlify.com/docs/redirects/#query-params
  query = {id = ":id"}

  # Redirect based on browser language, geolocation, and/or identity role.
  conditions = {Language = ["en"], Country = ["US"], Role = ["admin"]}

  # Sign each request with a value defined in an environment variable
  signed = "API_SIGNATURE_TOKEN"

  # You can also define custom headers within your redirects blocks.
  [redirects.headers]
    X-From = "Netlify"
    X-Api-Key = "some-api-key-string"

# The following redirect is intended for use with most SPAs that handle
# routing internally.
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

[[headers]]
  # Define which paths this specific [[headers]] block will cover.
  for = "/*"

  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    Content-Security-Policy = "frame-ancestors https://www.facebook.com"

    # Multi-key header rules are expressed with multi-line strings.
    Link = '''
    </assets/css/base.css>; rel=preload; as=style, \
    </assets/css/base2.css>; rel=preload; as=style, \
    </assets/css/base3.css>; rel=preload; as=style'''

    # Basic-Auth allows you to password protect your whole site.
    # Only available to paid accounts.
    Basic-Auth = "someuser:somepassword anotheruser:anotherpassword"
